from typing import Union
import numpy as np

class StorageView:
  @staticmethod
  def full(value: float, size: int, device: str) -> StorageView: ...
  @staticmethod
  def from_vec(vec: Union[list[float], np.ndarray], device: str) -> StorageView: ...
  def len(self) -> int: ...
  def to_vec(self) -> list[float]: ...
  def slice(self, offset: int, size: int) -> StorageView: ...
  def reshape(self, shape: list[int]) -> StorageView: ...
  def expand(self, shape: list[int]) -> StorageView: ...
  def permute(self, dims: list[int]) -> StorageView: ...
  def neg(self) -> StorageView: ...
  def sqrt(self) -> StorageView: ...
  def exp(self) -> StorageView: ...
  def log(self) -> StorageView: ...
  def add(self, other: StorageView) -> StorageView: ...
  def sub(self, other: StorageView) -> StorageView: ...
  def mul(self, other: StorageView) -> StorageView: ...
  def div(self, other: StorageView) -> StorageView: ...
